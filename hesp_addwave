#!/usr/bin/python
import matplotlib.pyplot as plt
import matplotlib.cm as cm
from matplotlib.colors import LogNorm
import numpy, time
import peakutils
from astropy.io import fits
from scipy.ndimage import morphology as morph
from scipy.ndimage import filters
import os
import numpy as np
from scipy import interpolate
import progressbar
from time import sleep
import ConfigParser
import pandas as pd
import sys
from os.path import expanduser
home = expanduser("~")

#Parse the config parameters
Config=ConfigParser.ConfigParser()
Config.read(home+'/'+'hesp.config')
objname=Config.get('Headers','objname')
objtype=Config.get('Headers','objtype')
reseltype=Config.get('Headers','reseltype')
dateobs=Config.get('Headers','dateobs')
exptime=Config.get('Headers','exptime')
reselkeylow=Config.get('Keys','reselkeylow')
reselkeyhigh=Config.get('Keys','reselkeyhigh')
biaskey=Config.get('Keys','biaskey')
flatkey=Config.get('Keys','flatkey')
calibkey=Config.get('Keys','calibkey')
objectkey=Config.get('Keys','objectkey')
fits_index=int(Config.get('Fits','index'))
binsize=float(Config.get('Extraction','binsize'))
binres=float(Config.get('Extraction','binres'))
path=Config.get('Config','path')


fl=sys.argv[1]
hdu=fits.open(fl)
header=hdu[0].header
flux=hdu[0].data
try :
	 resel=hdu[0].header[reseltype]
except:
	 print 'Failed extracting Resolution from header..'
         sys.exit()

fiber=fl[-8:-7]

if resel==reselkeylow:
	if fiber=='1':
		wave=np.load(path+'lowwave_fib1.npy')
	if fiber=='2':
		wave=np.load(path+'lowwave_fib2.npy')
	orstrt=93		
elif resel==reselkeyhigh:
	if fiber=='1':
		wave=np.load(path+'highwave_fib1.npy')
	if fiber=='2':
		wave=np.load(path+'highwave_fib2.npy')
	orstrt=96	
else:
	print 'Error reading resolution'
	sys.exit() 				
		
header['WCSDIM']  =                    2
header['CTYPE1']= 'MULTISPE'
header['CTYPE2']  = 'MULTISPE'
header['CDELT1'] =  1.
header['CDELT2']  = 1.
header['CD1_1']   = 1.
header['CD2_2']   = 1.
header['LTM1_1']  = 1.
header['LTM2_2']  = 1.
header['WAT0_001']= 'system=multispec'
header['WAT1_001']= 'wtype=multispec label=Wavelength units=angstroms'
string='wtype=multispec '


for i in range(1,len(wave)+1,1):
	#key='WAT2_'+ '{0:03d}'.format(i)
	st=string +'spec'+str(i)+'='+'"'+str(i)+' '+ str(orstrt-i+1)+' '+ str(0)+' '+ "{:.4f}".format(wave[i-1][0])+' '+ "{:.4f}".format((wave[i-1][4095]-wave[i-1][0])/4096)+' '+str(4096)+' '+str(0)+' '+str(1)+' '+str(61)+'" '
	if i==1:
	    string=''
	key='WAT2_'+ '{0:03d}'.format(i)
	header[key]=st

hduOut =fits.PrimaryHDU(flux)
hduOut.header=header
hduOut.writeto(fl[:-7]+'_wc.fit',clobber=True)
print 'Headers updated with wavelength info'

